/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 3>, <&to 3>;
        };

        custom_mt: custom_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };

        custom_mt_mo: custom_mt_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_MT_MO";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_underscore {
            bindings = <&kp UNDER>;
            key-positions = <60 61>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1                &kp F2  &kp F3  &kp F4  &kp F5                                                                                                                      &kp F6  &kp F7     &kp F8   &kp F9    &kp F10
&trans                &trans  &trans  &trans  &trans  &trans                                                                                                      &trans  &trans  &trans     &trans   &trans    &trans
&custom_mt LCTRL TAB  &kp Q   &kp W   &kp E   &kp R   &kp T                                                                                                       &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BACKSPACE
&kp ESC               &kp A   &kp S   &kp D   &kp F   &kp G                                                                                                       &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT          &kp Z   &kp X   &kp C   &kp V   &kp B   &trans          &trans  &trans          &trans       &trans                 &trans                  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp PERCENT
&mo 4                 &trans  &trans  &trans  &trans          &kp LEFT_SHIFT  &mo 1   &kp LEFT_GUI    &kp PERCENT  &custom_mt_mo 2 ENTER  &custom_mt LCTRL SPACE          &trans  &trans     &trans   &trans    &kp PG_DN
            >;
        };

        lower {
            bindings = <
&trans     &trans         &trans    &trans      &trans                                                                                                         &trans           &trans     &trans            &trans         &trans
&trans     &trans         &trans    &trans      &trans          &trans                                                                  &trans                 &trans           &trans     &trans            &trans         &trans
&kp UNDER  &kp N1         &kp N2    &kp N3      &kp N4          &kp N5                                                                  &kp N6                 &kp N7           &kp N8     &kp N9            &kp N0         &kp DEL
&kp CARET  &kp HASH       &kp AT    &kp DOLLAR  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS                                                    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL  &kp GREATER_THAN  &kp LESS_THAN  &kp GRAVE
&trans     &kp BACKSLASH  &kp EXCL  &kp STAR    &kp PLUS        &kp LEFT_BRACKET      &trans  &trans  &trans    &trans  &trans  &trans  &kp RIGHT_BRACKET      &kp MINUS        &kp AMPS   &kp PIPE          &kp TILDE      &trans
&trans     &trans         &trans    &trans      &trans                                &trans  &trans  &trans    &trans  &trans  &trans                         &trans           &trans     &trans            &trans         &trans
            >;

            label = "lower";
        };

        nav_layer {
            bindings = <
&trans      &trans          &trans        &trans         &trans                                                                                                &trans        &trans          &trans           &trans        &trans
&trans      &trans          &trans        &trans         &trans             &trans                                                             &trans          &trans        &trans          &trans           &trans        &trans
&kp F1      &kp F2          &kp F3        &kp F4         &kp F5             &kp F6                                                             &kp F7          &kp F8        &kp F9          &kp F10          &kp F11       &kp F12
&kp C_STOP  &kp C_PREVIOUS  &kp C_NEXT    &kp C_MUTE     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                                                    &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LEFT_ALT  &trans
&trans      &trans          &kp C_BRI_UP  &kp C_BRI_DEC  &kp INSERT         &kp PRINTSCREEN  &trans  &trans  &trans    &trans  &trans  &trans  &kp HOME        &kp PG_UP     &kp PAGE_DOWN   &kp END          &kp LCTRL     &trans
&trans      &trans          &trans        &trans         &trans                              &trans  &trans  &trans    &trans  &trans  &trans                  &trans        &trans          &trans           &trans        &trans
            >;

            label = "nav";
        };

        lower_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                           &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans        &none         &none       &none       &none      &kp HOME                                                     &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans        &none         &none       &kp UP      &none      &kp END                                                      &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans        &none         &kp LEFT    &kp DOWN    &kp RIGHT  &kp PG_UP                                                    &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans        &kp K_CMENU   &none       &kp F11     &kp F12    &kp PG_DN  &trans  &trans  &to 0     &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans        &kp CAPS      &kp INS     &kp F11     &kp F12               &trans  &trans  &trans    &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &none
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };
    };
};
